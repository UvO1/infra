name: Fix

on: 
  workflow_dispatch:
    inputs: 
      release_version:
        description: 'Version of release to fix'
        required: true
    
jobs:
  fix:
    name: create release
    runs-on: ubuntu-22.04
    env:
      REGISTRY_ID: ${{ secrets.REGISTRY_ID }}
      RELEASE_VERSION: ${{ github.run_number }}
      OAUTH_TOKEN: ${{ secrets.OAUTH_TOKEN }}
      GITHUB_TOKEN: ${{ github.token }}
      AUTHOR: ${{ github.actor }}
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Set current date as env variable
        run: echo "NOW=$(date +'%d-%m-%Y')" >> $GITHUB_ENV
      - name: Create Issue
        uses: dacbd/create-issue-action@main
        with:
          token: ${{ github.token }}
          title: Release ${{ github.event.inputs.release_version }} fixed
          body: |
            ## Release ${{ github.event.inputs.release_version }} fixed
            Author: ${{ github.actor }}
            Date: ${{ env.NOW }}
            Link: http://cr.yandex/${{ secrets.REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }}
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Test
        run: npm run test
      - name: Create release branch
        run: git checkout -b releases/{{ github.event.inputs.release_version }}
      - name: Build
        run: docker build . -t cr.yandex/${{ secrets.REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }} -t cr.yandex/${{ secrets.REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest
      - name: Push to release branch
        run: git push origin releases/{{ github.event.inputs.release_version }}
      - name: Login to Cloud
        run: echo $OAUTH_TOKEN | docker login --username oauth --password-stdin cr.yandex
      - name: Rename Image
        run: docker tag cr.yandex/${{ secrets.REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest cr.yandex/${{ secrets.REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}no
      - name: Push to Registry
        run: |
          docker push cr.yandex/${{ secrets.REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }}
          docker push cr.yandex/${{ secrets.REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest
      

            

            
