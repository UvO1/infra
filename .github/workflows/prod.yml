name: Prod

on: 
  workflow_dispatch:
    inputs: 
      release_version:
        description: 'Version of release to prod'
        required: true
    
jobs:
  prod:
    name: release to production
    runs-on: ubuntu-22.04
    env:
      REGISTRY_ID: ${{ secrets.REGISTRY_ID }}
      RELEASE_VERSION: ${{ github.run_number }}
      OAUTH_TOKEN: ${{ secrets.OAUTH_TOKEN }}
      RELEASE_TO_DEPLOY: ${{ github.event.inputs.release_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Set current date as env variable
        run: echo "NOW=$(date +'%d-%m-%Y')" >> $GITHUB_ENV
      - name: Create Issue
        uses: dacbd/create-issue-action@main
        with:
          token: ${{ github.token }}
          title: Release ${{ github.run_number }} выкачан в прод
          body: |
            ## Release 
            Author: ${{ github.actor }}
            Date: ${{ env.NOW }}

      - name: Deploy SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST_SSH }}
          username: ${{ secrets.USER_SSH }}
          key: ${{ secrets.KEY_SSH }}
          passphrase: ${{ secrets.PASSPHRASE_SSH }}
          script: |
            whoami
            echo "${{ secrets.OAUTH_TOKEN }}" | docker login --username oauth --password-stdin cr.yandex
            docker pull cr.yandex/${{ secrets.REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest
            docker stop $(docker ps -a -q)
            docker run -d -p 3000:3000 cr.yandex/${{ secrets.REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest
              
